---
# None Cpp Java JavaScript Objc Protp TableGen TextProto
Language:        ObjC
# LLVM, Google, Chromium, Mozilla, WebKit
# BasedOnStyle:  LLVM

# 访问说明符的偏移(public private)
AccessModifierOffset: -2

# 括号之后,水平对齐参数": @"Align DontAlign AlwaysBreak
AlignAfterOpenBracket: Align

# 连续的赋值时,对齐所有的等号
AlignConsecutiveAssignments: true

# 连续声明时，对齐所有声明的变量名
AlignConsecutiveDeclarations: true

# 左对齐换行(使用反斜杠换行)的反斜杠 DontAlign, Left, Right
AlignEscapedNewlines: Right

# 水平对齐二元和三元表达式的操作数
AlignOperands:   true

# 对齐连续的尾随的注释
AlignTrailingComments: true

# 允许函数声明的所有参数在放在下一行
AllowAllParametersOfDeclarationOnNextLine: true

# 允许短的块放在同一行
AllowShortBlocksOnASingleLine: false

# 允许短的case标签放在同一行
AllowShortCaseLabelsOnASingleLine: false

# 允许短的函数放在同一行": @"None, InlineOnly(定义在类中),
# Empty(空函数), Inline(定义在类中，空函数), All
AllowShortFunctionsOnASingleLine: All

# 是否允许短if单行 If true, if (a) return; 可以放到同一行
AllowShortIfStatementsOnASingleLine: false

# 允许短的循环保持在同一行
AllowShortLoopsOnASingleLine: false

# 总是在定义返回类型后换行
AlwaysBreakAfterDefinitionReturnType: None

# 函数声明返回类型是否换行
AlwaysBreakAfterReturnType: None

# 字符串总是多行显示
AlwaysBreakBeforeMultilineStrings: false

# 模板声明样式
AlwaysBreakTemplateDeclarations: false

# 如果false，函数调用的参数将全部在同一行上，或者每行都有一行。
BinPackArguments: true

# 如果false，函数声明或函数定义的参数将全部在同一行上，或者每行都有一行
BinPackParameters: true

#
BraceWrapping:   
  AfterClass:      false
  AfterControlStatement: false
  AfterEnum:       false
  AfterFunction:   false
  AfterNamespace:  false
  AfterObjCDeclaration: false
  AfterStruct:     false
  AfterUnion:      false
  AfterExternBlock: false
  BeforeCatch:     false
  BeforeElse:      false
  IndentBraces:    false
  SplitEmptyFunction: true
  SplitEmptyRecord: true
  SplitEmptyNamespace: true

# 包装二元运算符的方法
BreakBeforeBinaryOperators: None

# 支撑breack风格使用
BreakBeforeBraces: Attach

# 官网没有介绍
BreakBeforeInheritanceComma: false
# 为 true 的话, 三元符号换行显示
BreakBeforeTernaryOperators: false

BreakConstructorInitializersBeforeComma: false
BreakConstructorInitializers: BeforeColon

# 与 OC 无关
BreakAfterJavaFieldAnnotations: false

# 格式化字符串
BreakStringLiterals: true
# 每行字符的限制，0表示没有限制
ColumnLimit:     0
CommentPragmas:  '^ IWYU pragma:'

# 如果true，连续的名称空间声明将在同一行。如果false，每个命名空间都在新行上声明
CompactNamespaces: false

# 如果构造函数初始值设定项不适合一行，则将每个初始化程序放在自己的行上
ConstructorInitializerAllOnOneLineOrOnePerLine: false

# 用于缩进构造函数初始值设定项列表以及继承列表的字符数
ConstructorInitializerIndentWidth: 4

# 行连续的缩进宽度
ContinuationIndentWidth: 4

# cpp 样式
Cpp11BracedListStyle: true

# 如果true，分析格式化文件以进行最常见的对齐&和*。指针和引用对齐样式将根据文件中的首选项进行更新。 PointerAlignment然后仅用作后备
DerivePointerAlignment: false

# 完全禁用格式化
DisableFormat:   false

# 官网不建议使用, 获奖放弃
ExperimentalAutoDetectBinPacking: false

# 命名空间结尾注释
FixNamespaceComments: true

ForEachMacros:   
  - foreach
  - Q_FOREACH
  - BOOST_FOREACH
IncludeBlocks:   Preserve
IncludeCategories: 
  - Regex:           '^"(llvm|llvm-c|clang|clang-c)/'
    Priority:        2
  - Regex:           '^(<|"(gtest|gmock|isl|json)/)'
    Priority:        3
  - Regex:           '.*'
    Priority:        1
IncludeIsMainRegex: '(Test)?$'

# 缩进案例标记switch语句中的一个级别
IndentCaseLabels: false

# 要使用的预处理器指令缩进样式
IndentPPDirectives: AfterHash

# 缩进宽度
IndentWidth:     4

# 类之后的含函数申明与定义样式
IndentWrappedFunctionNames: true

JavaScriptQuotes: Leave
JavaScriptWrapImports: true

# 如果为true，则保留块开始处的空行
KeepEmptyLinesAtTheStartOfBlocks: false

MacroBlockBegin: ''
MacroBlockEnd:   ''
MaxEmptyLinesToKeep: 1
NamespaceIndentation: None
ObjCBlockIndentWidth: 2
ObjCSpaceAfterProperty: false
ObjCSpaceBeforeProtocolList: true
PenaltyBreakAssignment: 2
PenaltyBreakBeforeFirstCallParameter: 19
PenaltyBreakComment: 300
PenaltyBreakFirstLessLess: 120
PenaltyBreakString: 1000
PenaltyExcessCharacter: 1000000
PenaltyReturnTypeOnItsOwnLine: 60

# 指针的*的挨着哪边
PointerAlignment: Right

# 语言: None Cpp Java JavaScript Objc Protp TableGen TextProto
RawStringFormats: 
  - Delimiter:       pb
    Language:        TextProto
    BasedOnStyle:    google

#
ReflowComments:  true

# 允许排序#include, 造成编译错误
SortIncludes:    false

# 如果true，clang-format将使用声明排序
SortUsingDeclarations: true

# 如果true在C样式转换后插入空格
SpaceAfterCStyleCast: false

# 如果true，'template'关键字后面会插入一个空格
SpaceAfterTemplateKeyword: true

# 如果false，在赋值运算符之前将删除空格
SpaceBeforeAssignmentOperators: true

# 定义在括号之前放置空格的情况
SpaceBeforeParens: Never

# 如果true，参数可以插入空格()
SpaceInEmptyParentheses: false

# 尾随行注释（//- 注释）之前的空格数
SpacesBeforeTrailingComments: 1

# 如果true，将 在模板参数列表<之前和之后插入空格>
SpacesInAngles:  false

# 字典/数组的 { 与[ 之间是否要空格
SpacesInContainerLiterals: false

# 如果true，可以将空格插入到C样式转换中
SpacesInCStyleCastParentheses: false

# 小括号两边添加空格
SpacesInParentheses: false

# 如果true，空格将在[之前和之后插入]。Lambdas或未指定大小的数组声明不会受到影响
SpacesInSquareBrackets: false

# 与 OC 没有关系
Standard:        Cpp11
TabWidth:        8
UseTab:          Never
...

